@model WebUI.Models.ResetPasswordViewModel

@{
    Layout = null;
    ViewData["Title"] = "Şifre Sıfırlama";
}

<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"]</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Fontawesome CDN Link -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta2/css/all.min.css" />
    <style>
        .requirements {
            list-style-type: none;
            padding: 0;
        }

            .requirements li {
                color: #D93025;
                text-decoration: none;
            }

                .requirements li.valid {
                    color: #28a745;
                    text-decoration: line-through;
                }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-center">@ViewData["Title"]</h2>
        <form asp-controller="Login" asp-action="ResetPassword" method="post">
            <input type="hidden" asp-for="UserId" />
            <input type="hidden" asp-for="Token" />

            <div class="form-group">
                <label asp-for="NewPassword">Yeni Şifre:</label>
                <input id="create_pw" asp-for="NewPassword" type="password" class="form-control" required />
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>
            <ul class="requirements">
                <li id="length" class="invalid">En az 8 karakter</li>
                <li id="uppercase" class="invalid">En az 1 büyük harf</li>
                <li id="number" class="invalid">En az 1 sayı</li>
                <li id="special" class="invalid">En az 1 özel karakter</li>
            </ul>
            <div class="form-group">
                <label asp-for="ConfirmPassword">Şifre Onayı:</label>
                <input id="confirm_pw" asp-for="ConfirmPassword" type="password" class="form-control" required disabled />
                <i class="fas fa-eye-slash show"></i>
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="alert">
                <i class="fas fa-exclamation-circle error"></i>
                <span class="text">En az 8 karakter girin</span>
            </div>
            <button id="button" type="submit" class="btn btn-primary" disabled>Şifreyi Sıfırla</button>
        </form>
    </div>

    <!-- jQuery ve Toastify JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

    <!-- JavaScript kodu -->
    <script>
        const createPw = document.querySelector("#create_pw"),
            confirmPw = document.querySelector("#confirm_pw"),
            pwShow = document.querySelector(".show"),
            alertIcon = document.querySelector(".error"),
            alertText = document.querySelector(".text"),
            submitBtn = document.querySelector("#button");

        const lengthReq = document.getElementById("length"),
            uppercaseReq = document.getElementById("uppercase"),
            numberReq = document.getElementById("number"),
            specialReq = document.getElementById("special");

        pwShow.addEventListener("click", () => {
            if ((createPw.type === "password") && (confirmPw.type === "password")) {
                createPw.type = "text";
                confirmPw.type = "text";
                pwShow.classList.replace("fa-eye-slash", "fa-eye");
            } else {
                createPw.type = "password";
                confirmPw.type = "password";
                pwShow.classList.replace("fa-eye", "fa-eye-slash");
            }
        });

        createPw.addEventListener("input", () => {
            let val = createPw.value.trim();
            let lengthValid = val.length >= 8,
                uppercaseValid = /[A-Z]/.test(val),
                numberValid = /[0-9]/.test(val),
                specialValid = /[!@@#\$%\^\&*\)\(+=._-]+/.test(val);

            toggleValidation(lengthReq, lengthValid);
            toggleValidation(uppercaseReq, uppercaseValid);
            toggleValidation(numberReq, numberValid);
            toggleValidation(specialReq, specialValid);

            let allValid = lengthValid && uppercaseValid && numberValid && specialValid;

            if (allValid) {
                confirmPw.removeAttribute("disabled");
                submitBtn.removeAttribute("disabled");
                submitBtn.classList.add("active");
            } else {
                confirmPw.setAttribute("disabled", true);
                submitBtn.setAttribute("disabled", true);
                submitBtn.classList.remove("active");
                confirmPw.value = "";
                alertText.style.color = "#a6a6a6";
                alertText.innerText = "En az 8 karakter girin";
                alertIcon.style.display = "none";
            }
        });

        function toggleValidation(element, isValid) {
            if (isValid) {
                element.classList.remove("invalid");
                element.classList.add("valid");
            } else {
                element.classList.remove("valid");
                element.classList.add("invalid");
            }
        }

        submitBtn.addEventListener("click", (event) => {
            if (createPw.value !== confirmPw.value) {
                event.preventDefault();
                alertText.innerText = "Şifreler eşleşmedi";
                alertIcon.style.display = "block";
                alertText.style.color = "#D93025";
            } else {
                alertText.innerText = "Şifreler eşleşti";
                alertIcon.style.display = "none";
                alertText.style.color = "#4070F4";
            }
        });
    </script>
</body>
</html>
